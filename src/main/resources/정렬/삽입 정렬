
# 삽입 정렬
    1. 목록을 차례대로 훑으면서 다음 과정을 반복
        - 현재 위치의 요소를 뽑음
        - 이걸 과거에 방문했던 요소 중 어디 사이에 넣어야 정렬이 유지되는지 판단
        - 그 위치에 삽입
        - 삽입으로 인해 다른 요소들을 오른쪽으로 밀어야 할 수도 있음

    2. 예시
        5 3 1 3@ 4 6 2
        1회차 - index0 에 방문, 현재 방문한 것 중 가장 최솟값은 5이기 때문에 정렬 (방문으로 5만 했으므로)
        2회차 - index1 에 방문, 직전 방문이랑 비교 3이 더 작기 때문에 3과 5의 자리 바뀜
               3 5 1 3@ 4 6 2
        3회차 - index2 에 방문, 직전 방문index1과 비교 5보다 1이 더 작기 때문에 자리 바뀜
               3 1 5 3@ 4 6 2
               index0과 비교 1 < 3 이기 때문에 자리 바뀜
               1 3 5 3@ 4 6 2
        4회차 - index3 에 방문, 직전 방문index2와 비교 3 <5 이기 때문에 자리 바뀜
               1 3 3@ 5 4 6 2
               index1과 비교 3 = 3 이므로 바뀌지 않음 , 더 이상 왼쪽과 비교하지 않음
        ...
        n-1만큼 진행

    3. 외부 반복문은 for 문이 적합하고 내부 반복문은 while 문이 적합.
    4. 시간 / 공간 복잡도 : 버블 정렬과 동일
    5. 안정성 보장
    6. 코드 예시는




